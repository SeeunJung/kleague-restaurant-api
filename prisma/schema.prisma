generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL)
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  username     String   
  password     String
  nickname     String
  email        String?   @unique
  phoneNumber        String?
  favoriteTeam String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  favorites    Favorite[]
  reviews      Review[]
}

model Stadium {
  id           Int       @id @default(autoincrement())
  name         String
  team         String
  address      String
  latitude     Float
  longitude    Float
  logo         String?
  restaurants  Restaurant[]
}

model Restaurant {
  id           Int     @id @default(autoincrement())
  name         String
  category     String
  address      String
  latitude     Float
  longitude    Float
  phone        String?
  businessHours String?
  team         String?
  remark       String?
  stadiumId    Int
  stadium      Stadium @relation(fields: [stadiumId], references: [id])
  favorites    Favorite[]
  reviews      Review[]
}

model Favorite {
  id            Int        @id @default(autoincrement())
  userId        Int
  user          User       @relation(fields: [userId], references: [id])
  restaurantId  Int
  restaurant    Restaurant @relation(fields: [restaurantId], references: [id])
  createdAt     DateTime   @default(now())

  @@unique([userId, restaurantId])
}

model Review {
  id            Int        @id @default(autoincrement())
  content       String
  rating        Int
  userId        Int
  user          User       @relation(fields: [userId], references: [id])
  restaurantId  Int
  restaurant    Restaurant @relation(fields: [restaurantId], references: [id])
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}